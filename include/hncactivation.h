/*
* Copyright (c) 2014, 武汉华中数控股份有限公司软件开发部
* All rights reserved.
* 
* 文件名称：hncactivation.h
* 文件标识：根据配置管理计划书
* 摘    要：
* 运行平台：linux/winxp
* 
* 版    本：1.2.2
* 作    者：HNC-8 team
* 日    期：2014年12月19日
* 说    明：进行系统注册
*/

#ifndef __HNCACTIVATION_H__
#define __HNCACTIVATION_H__

#include "hncdatatype.h"

// 注册状态
enum ACTIVAT_TYPE
{
	ACT_NO_REG = 0,			// 系统未注册
	ACT_OVER_DATE,			// 系统注册超期
	ACT_OK,					// 系统在注册时间范围内
	ACT_FOREVER				// 永久注册
};

///////////////////////////////////////////////////////////////////////////////
//
//    extern Bit32 HNC_ActivationLoad()
//
//    功能：
//           加载注册信息
//
//    参数：
//			 无
//
//    描述：
//            
//
//    返回：
//           0，成功；-1，失败  
//
//////////////////////////////////////////////////////////////////////////
extern Bit32 HNC_ActivationInit();    

///////////////////////////////////////////////////////////////////////////////
//
//    HNCAPI Bit32 HNC_ActivationGetLastday(Bit32 *pFlag, Bit32 *pDay, Bit16 clientNo = 0)
//
//    功能：
//            获取剩余天数
//
//    参数：
//            pFlag ：参见ACTIVAT_TYPE定义
//            pDay ： 剩余天数 
//            clientNo ：
//
//    描述：
//            
//
//    返回：
//           0: 成功 ，-1：失败
//
//////////////////////////////////////////////////////////////////////////
HNCAPI Bit32 HNC_ActivationGetLastday(Bit32 *pFlag, Bit32 *pDay, Bit16 clientNo = 0);  

///////////////////////////////////////////////////////////////////////////////
//
//    HNCAPI Bit32 HNC_ActivationGetExpDate(Bit32 *pFlag, Bit32 pDate[3], Bit16 clientNo = 0)
//
//    功能：
//			  获取到期日期
//            
//
//    参数：
//            pFlag ：参见ACTIVAT_TYPE定义
//            pDate[3] ： 到期日期。存储的分别为年月日
//            clientNo ：
//
//    描述：
//            
//
//    返回：
//            0: 成功 ，-1：失败  
//
//////////////////////////////////////////////////////////////////////////
HNCAPI Bit32 HNC_ActivationGetExpDate(Bit32 *pFlag, Bit32 pDate[3], Bit16 clientNo = 0);


///////////////////////////////////////////////////////////////////////////////
//
//    extern Bit32 HNC_ActivationLoadRegFile(const Bit8 *pRegFilePath)
//
//    功能：
//            进行系统注册
//
//    参数：
//            pRegFilePath ：注册文件的路径
//
//    描述：
//            
//
//    返回：
//            0：注册成功；-1：文件错误；-2：SN码不匹配；-3：非第一次注册的PC生成的注册码
//            -4：注册文件已经在本机注册；-5：注册文件的注册时间超期
//
//////////////////////////////////////////////////////////////////////////
extern Bit32 HNC_ActivationLoadRegFile(const Bit8 *pRegFilePath);

///////////////////////////////////////////////////////////////////////////////
//
//    extern Bit32 HNC_ActivationDelaySn(const Bit8 *delaySn)
//
//    功能：
//            系统续期
//
//    参数：
//            delaySn ：续期码
//
//    描述：
//            
//
//    返回：
//            0：续期成功；-1：续期码错误；-2：需要先注册才能续期；-3：续期码超期；-4：续期码已经在本机使用
//
//////////////////////////////////////////////////////////////////////////
extern Bit32 HNC_ActivationDelaySn(const Bit8 *delaySn);

///////////////////////////////////////////////////////////////////////////////
//
//    Bit32 HNC_ActivationEarlyWarningStatus()
//
//    功能：
//           返回是否该显示报警的标志
//
//    参数：
//
//    描述：
//            
//
//    返回：
//           0：不显示，1：显示 
//
//////////////////////////////////////////////////////////////////////////
extern Bit32 HNC_ActivationEarlyWarningStatus();

///////////////////////////////////////////////////////////////////////////////
//
//    void HNC_ActivationGetTagCode(Bit8 *buf)
//
//    功能：
//            获取标志码字符串
//
//    参数：
//            buf ：标志码字符串缓存,长度为17（buf[17]）
//
//    描述：
//            
//
//    返回：
//            
//
//////////////////////////////////////////////////////////////////////////
extern void HNC_ActivationGetTagCode(Bit8 *buf);

///////////////////////////////////////////////////////////////////////////////
//
//    Bit32 HNC_ActivationSetTime()
//
//    功能：
//            修改系统时间更改注册信息
//
//    参数：
//            
//
//    描述：
//            
//
//    返回：
//            0: 成功 ，-1：失败
//
//////////////////////////////////////////////////////////////////////////
extern Bit32 HNC_ActivationSetTime();

#endif